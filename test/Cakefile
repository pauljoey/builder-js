
#####################################################################
# Required Builder setup
#####################################################################

builder   = require '../src/lib/builder' # Local
#builder   = require 'builder'           # Global
target    = builder.target
project   = builder.project

option('-t', '--target [TARGET]', 'Target to build (default: "build").');

task 'build', 'Build Project', (options) ->
	options.target = 'build' unless options.target? 
	builder.run(options.target, builder.lastProject())
#####################################################################


test_project = project('builder', 
	build_dir: './=build'
	staging_dir: './=staging'
	source_dir: './src'
)

coffee_files = builder.shell.ls(test_project.source_dir + '/coffee/*.coffee')

target 'build', ['js/app.js.min']

target 'js/app.js.min', ['app.coffee'], ->
	@read()
	@coffee2js()
	@write('js/app.js') # For debugging! :)
	@minifyJS()
	@prepend('*/')
	@prependFile('LICENSE')
	@prepend('/*')
	@write()
	

target 'app.coffee', coffee_files, ->
	@read()
	@cat()
	#@writeTmp()
	
target 'clean', [], ->
	builder.shell.rm('-rf', builderProject.build_dir + '/*')
	builder.shell.rm('-rf', builderProject.staging_dir + '/*')


